2024-07-23 11:24:36.354 CEST [7044] LOG:  duration: 11.113 ms  statement: BEGIN
2024-07-23 11:24:36.376 CEST [7044] LOG:  duration: 20.510 ms  statement: SELECT pg_current_logfile();
2024-07-23 11:24:36.378 CEST [7044] LOG:  duration: 2.359 ms  statement: SHOW data_directory;
2024-07-23 11:24:36.411 CEST [7044] LOG:  duration: 32.359 ms  statement: SELECT table_name FROM information_schema.tables WHERE table_schema='public';
2024-07-23 11:24:36.424 CEST [7044] LOG:  duration: 13.160 ms  statement: SELECT tablename, attname FROM pg_stats WHERE schemaname = 'public';
2024-07-23 11:25:42.700 CEST [16136] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:25:44.765 CEST [16136] LOG:  duration: 2066.866 ms
2024-07-23 11:25:47.022 CEST [14716] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:25:48.280 CEST [14716] LOG:  duration: 1258.909 ms
2024-07-23 11:25:49.417 CEST [7652] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:25:50.716 CEST [7652] LOG:  duration: 1300.484 ms
2024-07-23 11:25:52.806 CEST [15768] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:25:54.095 CEST [15768] LOG:  duration: 1289.975 ms
2024-07-23 11:25:56.011 CEST [11508] STATEMENT:  UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:02.244 CEST [972] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:03.480 CEST [972] LOG:  duration: 1236.505 ms
2024-07-23 11:27:03.568 CEST [16308] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:06.113 CEST [16308] LOG:  duration: 2545.289 ms
2024-07-23 11:27:06.200 CEST [10848] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:07.413 CEST [10848] LOG:  duration: 1213.787 ms
2024-07-23 11:27:07.492 CEST [8672] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:08.179 CEST [8672] LOG:  duration: 686.902 ms
2024-07-23 11:27:08.264 CEST [14556] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:08.581 CEST [14556] LOG:  duration: 317.525 ms
2024-07-23 11:27:08.797 CEST [7504] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:11.225 CEST [7504] LOG:  duration: 2428.448 ms
2024-07-23 11:27:11.422 CEST [13632] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:11.762 CEST [13632] LOG:  duration: 340.347 ms
2024-07-23 11:27:12.899 CEST [14876] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:14.667 CEST [14876] LOG:  duration: 1771.709 ms
2024-07-23 11:27:14.787 CEST [3092] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:15.146 CEST [3092] LOG:  duration: 359.993 ms
2024-07-23 11:27:15.221 CEST [3772] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:16.588 CEST [3772] LOG:  duration: 1367.614 ms
2024-07-23 11:27:16.680 CEST [11920] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:18.210 CEST [11920] LOG:  duration: 1531.007 ms
2024-07-23 11:27:18.401 CEST [4776] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:18.773 CEST [4776] LOG:  duration: 372.457 ms
2024-07-23 11:27:18.848 CEST [1336] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:19.949 CEST [1336] LOG:  duration: 1101.097 ms
2024-07-23 11:27:20.026 CEST [8160] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:21.999 CEST [8160] LOG:  duration: 1973.003 ms
2024-07-23 11:27:23.110 CEST [12940] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:24.075 CEST [12940] LOG:  duration: 965.219 ms
2024-07-23 11:27:24.177 CEST [6652] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:25.819 CEST [6652] LOG:  duration: 1642.809 ms
2024-07-23 11:27:25.924 CEST [7600] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:26.795 CEST [7600] LOG:  duration: 871.165 ms
2024-07-23 11:27:26.927 CEST [3032] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:27.303 CEST [3032] LOG:  duration: 375.919 ms
2024-07-23 11:27:27.384 CEST [796] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:29.034 CEST [796] LOG:  duration: 1650.353 ms
2024-07-23 11:27:29.117 CEST [14792] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:30.474 CEST [14792] LOG:  duration: 1358.070 ms
2024-07-23 11:27:30.556 CEST [9468] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:31.980 CEST [9468] LOG:  duration: 1424.522 ms
2024-07-23 11:27:33.212 CEST [12392] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:34.715 CEST [12392] LOG:  duration: 1503.654 ms
2024-07-23 11:27:34.797 CEST [9784] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:27:34.885 CEST [9784] LOG:  duration: 88.525 ms
2024-07-23 11:27:34.972 CEST [11812] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:35.762 CEST [11812] LOG:  duration: 791.019 ms
2024-07-23 11:27:35.840 CEST [700] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:36.220 CEST [700] LOG:  duration: 381.158 ms
2024-07-23 11:27:36.301 CEST [3688] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:36.694 CEST [3688] LOG:  duration: 393.413 ms
2024-07-23 11:27:36.775 CEST [9276] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:40.387 CEST [9276] LOG:  duration: 3612.929 ms
2024-07-23 11:27:40.497 CEST [15420] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:41.012 CEST [15420] LOG:  duration: 515.777 ms
2024-07-23 11:27:41.124 CEST [7316] LOG:  statement: UPDATE customer

	SET c_name = 'Customer' || c_custkey

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:41.916 CEST [7316] LOG:  duration: 792.486 ms
2024-07-23 11:27:42.329 CEST [13280] STATEMENT:  UPDATE part

	SET p_mfgr = CASE p_mfgr

	    WHEN 'MFGR#1' THEN 'MFGR#2'

	    WHEN 'MFGR#2' THEN 'MFGR#3'

	    WHEN 'MFGR#3' THEN 'MFGR#4'

	    WHEN 'MFGR#4'THEN 'MFGR#1'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:43.442 CEST [1732] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:43.830 CEST [1732] LOG:  duration: 388.386 ms
2024-07-23 11:27:43.917 CEST [12496] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:45.558 CEST [12496] LOG:  duration: 1641.280 ms
2024-07-23 11:27:45.632 CEST [11628] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:47.121 CEST [11628] LOG:  duration: 1489.682 ms
2024-07-23 11:27:47.223 CEST [15776] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:48.236 CEST [15776] LOG:  duration: 1014.175 ms
2024-07-23 11:27:48.329 CEST [13524] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:48.692 CEST [13524] LOG:  duration: 362.908 ms
2024-07-23 11:27:48.897 CEST [11252] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:50.272 CEST [11252] LOG:  duration: 1375.178 ms
2024-07-23 11:27:50.375 CEST [4296] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:51.852 CEST [4296] LOG:  duration: 1477.441 ms
2024-07-23 11:27:52.941 CEST [11092] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:54.638 CEST [11092] LOG:  duration: 1696.624 ms
2024-07-23 11:27:54.713 CEST [12244] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:55.278 CEST [12244] LOG:  duration: 566.190 ms
2024-07-23 11:27:55.353 CEST [11648] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:55.704 CEST [11648] LOG:  duration: 351.988 ms
2024-07-23 11:27:55.781 CEST [10504] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:27:56.149 CEST [10504] LOG:  duration: 368.932 ms
2024-07-23 11:27:56.231 CEST [8876] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:27:57.087 CEST [8876] LOG:  duration: 856.833 ms
2024-07-23 11:27:57.178 CEST [14380] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:27:59.849 CEST [14380] LOG:  duration: 2672.095 ms
2024-07-23 11:28:00.065 CEST [6692] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:01.373 CEST [6692] LOG:  duration: 1308.395 ms
2024-07-23 11:28:02.463 CEST [4456] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:02.851 CEST [4456] LOG:  duration: 388.674 ms
2024-07-23 11:28:02.933 CEST [13564] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:28:02.979 CEST [13564] LOG:  duration: 46.683 ms
2024-07-23 11:28:03.190 CEST [5660] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:03.832 CEST [5660] LOG:  duration: 642.778 ms
2024-07-23 11:28:03.907 CEST [14080] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:05.236 CEST [14080] LOG:  duration: 1328.813 ms
2024-07-23 11:28:05.313 CEST [8920] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:06.569 CEST [8920] LOG:  duration: 1255.830 ms
2024-07-23 11:28:06.646 CEST [11856] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:07.014 CEST [11856] LOG:  duration: 368.195 ms
2024-07-23 11:28:07.100 CEST [14608] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:07.445 CEST [14608] LOG:  duration: 346.312 ms
2024-07-23 11:28:08.555 CEST [14216] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:08.888 CEST [14216] LOG:  duration: 333.980 ms
2024-07-23 11:28:08.962 CEST [2596] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:11.585 CEST [2596] LOG:  duration: 2623.135 ms
2024-07-23 11:28:11.660 CEST [1304] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:12.004 CEST [1304] LOG:  duration: 344.167 ms
2024-07-23 11:28:12.078 CEST [7312] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:12.816 CEST [7312] LOG:  duration: 738.169 ms
2024-07-23 11:28:12.910 CEST [12824] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:13.259 CEST [12824] LOG:  duration: 349.359 ms
2024-07-23 11:28:13.335 CEST [11176] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:13.671 CEST [11176] LOG:  duration: 336.024 ms
2024-07-23 11:28:13.748 CEST [8780] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:15.006 CEST [8780] LOG:  duration: 1259.206 ms
2024-07-23 11:28:15.084 CEST [4996] LOG:  statement: UPDATE customer

	SET c_name = 'Customer' || c_custkey

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:15.777 CEST [4996] LOG:  duration: 693.372 ms
2024-07-23 11:28:15.857 CEST [1092] LOG:  statement: UPDATE customer

	SET c_mktsegment = CASE c_mktsegment

	    WHEN 'AUTOMOBILE' THEN 'BUILDING'

	    WHEN 'BUILDING' THEN 'FURNITURE'

	    WHEN 'FURNITURE' THEN 'HOUSEHOLD'

	    WHEN 'HOUSEHOLD' THEN 'MACHINERY'

	    WHEN 'MACHINERY' THEN 'AUTOMOBILE'

	END

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:16.547 CEST [1092] LOG:  duration: 690.647 ms
2024-07-23 11:28:16.734 CEST [7608] LOG:  statement: UPDATE customer

	SET c_address = 'P.O Box N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:17.430 CEST [7608] LOG:  duration: 696.394 ms
2024-07-23 11:28:18.392 CEST [5980] LOG:  checkpoint starting: time
2024-07-23 11:28:18.650 CEST [12328] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:18.977 CEST [12328] LOG:  duration: 327.139 ms
2024-07-23 11:28:19.195 CEST [11532] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:19.524 CEST [11532] LOG:  duration: 329.537 ms
2024-07-23 11:28:19.597 CEST [11024] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:20.847 CEST [11024] LOG:  duration: 1250.686 ms
2024-07-23 11:28:21.068 CEST [14196] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:22.329 CEST [14196] LOG:  duration: 1261.149 ms
2024-07-23 11:28:22.400 CEST [1464] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:22.725 CEST [1464] LOG:  duration: 325.825 ms
2024-07-23 11:28:22.945 CEST [8456] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:23.651 CEST [8456] LOG:  duration: 707.085 ms
2024-07-23 11:28:23.873 CEST [16168] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:24.219 CEST [16168] LOG:  duration: 346.298 ms
2024-07-23 11:28:24.294 CEST [10020] LOG:  statement: UPDATE customer

	SET c_address = 'P.O Box N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:25.004 CEST [10020] LOG:  duration: 710.310 ms
2024-07-23 11:28:25.083 CEST [12596] LOG:  statement: UPDATE customer

	SET c_name = 'Customer' || c_custkey

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:25.775 CEST [12596] LOG:  duration: 692.825 ms
2024-07-23 11:28:26.910 CEST [10592] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:27.608 CEST [10592] LOG:  duration: 698.784 ms
2024-07-23 11:28:27.686 CEST [6064] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:30.261 CEST [6064] LOG:  duration: 2575.458 ms
2024-07-23 11:28:32.961 CEST [4828] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:33.761 CEST [4828] LOG:  duration: 799.977 ms
2024-07-23 11:28:33.982 CEST [6248] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:35.234 CEST [6248] LOG:  duration: 1252.785 ms
2024-07-23 11:28:35.440 CEST [860] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:35.769 CEST [860] LOG:  duration: 329.858 ms
2024-07-23 11:28:35.841 CEST [11248] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:37.078 CEST [11248] LOG:  duration: 1237.036 ms
2024-07-23 11:28:38.175 CEST [2052] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:38.867 CEST [2052] LOG:  duration: 692.240 ms
2024-07-23 11:28:38.938 CEST [12896] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:39.299 CEST [12896] LOG:  duration: 362.175 ms
2024-07-23 11:28:39.463 CEST [15436] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:39.791 CEST [15436] LOG:  duration: 328.051 ms
2024-07-23 11:28:39.867 CEST [12964] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:40.210 CEST [12964] LOG:  duration: 342.970 ms
2024-07-23 11:28:40.286 CEST [7488] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:42.903 CEST [7488] LOG:  duration: 2617.756 ms
2024-07-23 11:28:43.112 CEST [10848] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:43.804 CEST [10848] LOG:  duration: 692.235 ms
2024-07-23 11:28:43.877 CEST [2920] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:45.129 CEST [2920] LOG:  duration: 1252.606 ms
2024-07-23 11:28:45.342 CEST [6608] LOG:  statement: UPDATE customer

	SET c_address = 'P.O Box N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:46.056 CEST [6608] LOG:  duration: 713.910 ms
2024-07-23 11:28:46.297 CEST [8520] LOG:  statement: UPDATE customer

	SET c_name = 'Customer' || c_custkey

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:47.027 CEST [8520] LOG:  duration: 730.724 ms
2024-07-23 11:28:47.102 CEST [6312] LOG:  statement: UPDATE part

	SET p_mfgr = CASE p_mfgr

	    WHEN 'MFGR#1' THEN 'MFGR#2'

	    WHEN 'MFGR#2' THEN 'MFGR#3'

	    WHEN 'MFGR#3' THEN 'MFGR#4'

	    WHEN 'MFGR#4'THEN 'MFGR#1'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:47.429 CEST [6312] LOG:  duration: 327.210 ms
2024-07-23 11:28:47.511 CEST [5888] LOG:  statement: UPDATE lineorder

	SET lo_orderpriority = CASE lo_orderpriority

	    WHEN '1-URGENT' THEN '2-HIGH'

	    WHEN '2-HIGH' THEN '3-MEDIUM'

	    WHEN '3-MEDIUM' THEN '4-NOT SPECI'

	    WHEN '4-NOT SPECI'THEN '5-LOW'

	    WHEN '5-LOW'THEN '1-URGENT'

	    end

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:48.803 CEST [5888] LOG:  duration: 1292.534 ms
2024-07-23 11:28:49.924 CEST [10720] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:50.265 CEST [10720] LOG:  duration: 341.057 ms
2024-07-23 11:28:50.341 CEST [15428] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:50.683 CEST [15428] LOG:  duration: 342.887 ms
2024-07-23 11:28:50.758 CEST [11716] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:51.100 CEST [11716] LOG:  duration: 341.908 ms
2024-07-23 11:28:51.177 CEST [15072] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:52.463 CEST [15072] LOG:  duration: 1286.613 ms
2024-07-23 11:28:52.682 CEST [3092] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:53.402 CEST [3092] LOG:  duration: 721.013 ms
2024-07-23 11:28:53.622 CEST [15444] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:56.308 CEST [15444] LOG:  duration: 2686.270 ms
2024-07-23 11:28:56.386 CEST [11920] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:28:56.747 CEST [11920] LOG:  duration: 362.249 ms
2024-07-23 11:28:56.831 CEST [11312] LOG:  statement: UPDATE lineorder

	SET lo_shipmode = CASE lo_shipmode

	    WHEN 'AIR|' THEN 'TRUCK|'

	    WHEN 'TRUCK|' THEN 'SHIP|'

	    WHEN 'SHIP|' THEN 'REG AIR|'

	    WHEN 'REG AIR|'THEN 'RAIL|'

	    WHEN 'RAIL|'THEN 'MAIL|'

	    WHEN 'MAIL|'THEN 'FOB|'

	    WHEN 'FOB|'THEN 'AIR|'

	    end

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:28:58.208 CEST [11312] LOG:  duration: 1377.867 ms
2024-07-23 11:28:58.284 CEST [10100] LOG:  statement: UPDATE customer

	SET c_mktsegment = CASE c_mktsegment

	    WHEN 'AUTOMOBILE' THEN 'BUILDING'

	    WHEN 'BUILDING' THEN 'FURNITURE'

	    WHEN 'FURNITURE' THEN 'HOUSEHOLD'

	    WHEN 'HOUSEHOLD' THEN 'MACHINERY'

	    WHEN 'MACHINERY' THEN 'AUTOMOBILE'

	END

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:28:59.003 CEST [10100] LOG:  duration: 719.644 ms
2024-07-23 11:29:00.116 CEST [5536] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:01.845 CEST [5536] LOG:  duration: 1729.436 ms
2024-07-23 11:29:01.952 CEST [8816] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:03.681 CEST [8816] LOG:  duration: 1729.221 ms
2024-07-23 11:29:03.779 CEST [12704] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:04.174 CEST [12704] LOG:  duration: 396.037 ms
2024-07-23 11:29:04.281 CEST [2308] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:05.791 CEST [2308] LOG:  duration: 1510.404 ms
2024-07-23 11:29:19.301 CEST [1424] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:29:19.352 CEST [1424] LOG:  duration: 51.875 ms
2024-07-23 11:29:19.434 CEST [3188] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:19.801 CEST [3188] LOG:  duration: 367.378 ms
2024-07-23 11:29:19.896 CEST [2348] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:20.389 CEST [2348] LOG:  duration: 493.364 ms
2024-07-23 11:29:21.499 CEST [9060] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:22.936 CEST [9060] LOG:  duration: 1437.227 ms
2024-07-23 11:29:23.035 CEST [10192] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:24.427 CEST [10192] LOG:  duration: 1393.291 ms
2024-07-23 11:29:24.522 CEST [15516] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:29:25.329 CEST [15516] LOG:  duration: 808.077 ms
2024-07-23 11:29:26.075 CEST [7188] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:29:26.851 CEST [7188] LOG:  duration: 776.809 ms
2024-07-23 11:29:26.943 CEST [7932] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:27.341 CEST [7932] LOG:  duration: 398.389 ms
2024-07-23 11:29:27.542 CEST [3264] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:30.420 CEST [3264] LOG:  duration: 2878.657 ms
2024-07-23 11:29:30.510 CEST [7068] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:30.876 CEST [7068] LOG:  duration: 365.872 ms
2024-07-23 11:29:32.004 CEST [1404] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:34.845 CEST [1404] LOG:  duration: 2840.873 ms
2024-07-23 11:29:34.942 CEST [12808] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:35.307 CEST [12808] LOG:  duration: 365.413 ms
2024-07-23 11:29:35.399 CEST [11136] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:35.763 CEST [11136] LOG:  duration: 363.947 ms
2024-07-23 11:29:35.858 CEST [3868] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:29:36.655 CEST [3868] LOG:  duration: 798.179 ms
2024-07-23 11:29:36.752 CEST [7232] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:37.128 CEST [7232] LOG:  duration: 376.323 ms
2024-07-23 11:29:37.222 CEST [13456] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:38.582 CEST [13456] LOG:  duration: 1360.825 ms
2024-07-23 11:29:38.777 CEST [12256] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:39.136 CEST [12256] LOG:  duration: 358.602 ms
2024-07-23 11:29:40.254 CEST [3152] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:40.618 CEST [3152] LOG:  duration: 365.086 ms
2024-07-23 11:29:40.701 CEST [13280] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:42.111 CEST [13280] LOG:  duration: 1409.707 ms
2024-07-23 11:29:42.201 CEST [12784] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:43.596 CEST [12784] LOG:  duration: 1394.523 ms
2024-07-23 11:29:43.683 CEST [8272] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:45.090 CEST [8272] LOG:  duration: 1407.924 ms
2024-07-23 11:29:45.182 CEST [7876] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:45.546 CEST [7876] LOG:  duration: 364.220 ms
2024-07-23 11:29:45.635 CEST [14104] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:47.012 CEST [14104] LOG:  duration: 1377.648 ms
2024-07-23 11:29:47.107 CEST [2932] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:49.941 CEST [2932] LOG:  duration: 2834.823 ms
2024-07-23 11:29:51.064 CEST [13212] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:29:51.832 CEST [13212] LOG:  duration: 767.487 ms
2024-07-23 11:29:51.916 CEST [12900] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:53.349 CEST [12900] LOG:  duration: 1432.523 ms
2024-07-23 11:29:53.436 CEST [7980] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:54.837 CEST [7980] LOG:  duration: 1400.712 ms
2024-07-23 11:29:55.032 CEST [1052] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:29:55.092 CEST [1052] LOG:  duration: 61.069 ms
2024-07-23 11:29:55.185 CEST [15924] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:29:55.240 CEST [15924] LOG:  duration: 54.997 ms
2024-07-23 11:29:55.329 CEST [9968] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:29:55.691 CEST [9968] LOG:  duration: 362.727 ms
2024-07-23 11:29:55.882 CEST [12692] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:29:58.709 CEST [12692] LOG:  duration: 2827.696 ms
2024-07-23 11:29:59.823 CEST [3452] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:30:01.280 CEST [3452] LOG:  duration: 1457.217 ms
2024-07-23 11:30:01.370 CEST [14380] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:30:02.792 CEST [14380] LOG:  duration: 1422.550 ms
2024-07-23 11:30:02.879 CEST [16136] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:30:03.251 CEST [16136] LOG:  duration: 372.561 ms
2024-07-23 11:30:03.338 CEST [10656] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:30:03.710 CEST [10656] LOG:  duration: 372.162 ms
2024-07-23 11:30:03.805 CEST [4572] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:30:04.160 CEST [4572] LOG:  duration: 355.194 ms
2024-07-23 11:30:04.256 CEST [9868] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:30:04.624 CEST [9868] LOG:  duration: 368.307 ms
2024-07-23 11:30:04.713 CEST [14080] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:30:06.402 CEST [14080] LOG:  duration: 1689.909 ms
2024-07-23 11:30:07.502 CEST [9440] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:30:08.302 CEST [9440] LOG:  duration: 800.615 ms
2024-07-23 11:30:09.790 CEST [11736] STATEMENT:  UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2024-07-23 11:35:58.284 CEST [15016] LOG:  duration: 1.061 ms  statement: SELECT CASE WHEN usesuper
	       THEN pg_catalog.pg_is_in_recovery()
	       ELSE FALSE
	       END as inrecovery,
	       CASE WHEN usesuper AND pg_catalog.pg_is_in_recovery()
	       THEN pg_is_wal_replay_paused()
	       ELSE FALSE
	       END as isreplaypaused
	FROM pg_catalog.pg_user WHERE usename=current_user
2024-07-23 11:35:58.497 CEST [15016] LOG:  duration: 6.387 ms  statement: /*pga4dash*/
	SELECT
	    pid,
	    datname,
	    usename,
	    application_name,
	    client_addr,
	    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
	    state,
	    wait_event_type || ': ' || wait_event AS wait_event,
	    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
	    query,
	    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
	    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
	    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
	    backend_type,
	    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
	FROM
	    pg_catalog.pg_stat_activity
	ORDER BY pid
2024-07-23 11:35:58.553 CEST [15016] LOG:  duration: 1.296 ms  statement: /*pga4dash*/
	SELECT
	    pid,
	    datname,
	    usename,
	    application_name,
	    client_addr,
	    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
	    state,
	    wait_event_type || ': ' || wait_event AS wait_event,
	    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
	    query,
	    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
	    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
	    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
	    backend_type,
	    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
	FROM
	    pg_catalog.pg_stat_activity
	ORDER BY pid
2024-07-23 11:35:58.772 CEST [15016] LOG:  duration: 11.041 ms  statement: /*pga4dash*/
	SELECT 'session_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity) AS "Total",
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE state = 'active')  AS "Active",
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE state = 'idle')  AS "Idle"
	) t
	UNION ALL
	SELECT 'tps_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(xact_commit) + sum(xact_rollback) FROM pg_catalog.pg_stat_database) AS "Transactions",
	   (SELECT sum(xact_commit) FROM pg_catalog.pg_stat_database) AS "Commits",
	   (SELECT sum(xact_rollback) FROM pg_catalog.pg_stat_database) AS "Rollbacks"
	) t
	UNION ALL
	SELECT 'ti_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_inserted) FROM pg_catalog.pg_stat_database) AS "Inserts",
	   (SELECT sum(tup_updated) FROM pg_catalog.pg_stat_database) AS "Updates",
	   (SELECT sum(tup_deleted) FROM pg_catalog.pg_stat_database) AS "Deletes"
	) t
	UNION ALL
	SELECT 'to_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_fetched) FROM pg_catalog.pg_stat_database) AS "Fetched",
	   (SELECT sum(tup_returned) FROM pg_catalog.pg_stat_database) AS "Returned"
	) t
	UNION ALL
	SELECT 'bio_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(blks_read) FROM pg_catalog.pg_stat_database) AS "Reads",
	   (SELECT sum(blks_hit) FROM pg_catalog.pg_stat_database) AS "Hits"
	) t
	
2024-07-23 11:35:58.852 CEST [15016] LOG:  duration: 10.776 ms  statement: 
	SELECT
	    has_table_privilege(
	      'pgagent.pga_job', 'INSERT, SELECT, UPDATE'
	    ) has_priviledge
	WHERE EXISTS(
	    SELECT has_schema_privilege('pgagent', 'USAGE')
	    WHERE EXISTS(
	        SELECT cl.oid FROM pg_catalog.pg_class cl
	        LEFT JOIN pg_catalog.pg_namespace ns ON ns.oid=relnamespace
	        WHERE relname='pga_job' AND nspname='pgagent'
	    )
	)
	
2024-07-23 11:35:59.098 CEST [15016] LOG:  duration: 5.486 ms  statement: SELECT
	    db.oid as did, db.datname as name, ta.spcname as spcname, db.datallowconn,
	    db.datistemplate AS is_template,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate, datdba as owner,
	    descr.description
	FROM
	    pg_catalog.pg_database db
	    LEFT OUTER JOIN pg_catalog.pg_tablespace ta ON db.dattablespace = ta.oid
	    LEFT OUTER JOIN pg_catalog.pg_shdescription descr ON (
	        db.oid=descr.objoid AND descr.classoid='pg_database'::regclass
	    )
	WHERE         db.oid > 16383::OID OR db.datname IN ('postgres', 'edb')
	
	ORDER BY datname;
2024-07-23 11:35:59.137 CEST [15016] LOG:  duration: 0.270 ms  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_catalog.pg_encoding_to_char(db.encoding) AS serverencoding,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.oid = 24842
2024-07-23 11:35:59.142 CEST [15016] LOG:  duration: 0.309 ms  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_catalog.pg_encoding_to_char(db.encoding) AS serverencoding,
	    pg_catalog.has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.oid = 24842
2024-07-23 11:35:59.228 CEST [7164] LOG:  duration: 12.065 ms  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='utf-8';
2024-07-23 11:35:59.229 CEST [7164] LOG:  duration: 0.158 ms  statement: SELECT version()
2024-07-23 11:35:59.232 CEST [7164] LOG:  duration: 2.620 ms  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2024-07-23 11:35:59.233 CEST [7164] LOG:  duration: 0.736 ms  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2024-07-23 11:35:59.234 CEST [12596] LOG:  duration: 11.710 ms  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='utf-8';
2024-07-23 11:35:59.234 CEST [12596] LOG:  duration: 0.191 ms  statement: SELECT version()
2024-07-23 11:35:59.237 CEST [12596] LOG:  duration: 2.016 ms  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2024-07-23 11:35:59.238 CEST [12596] LOG:  duration: 0.756 ms  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2024-07-23 11:35:59.241 CEST [7164] LOG:  duration: 7.781 ms  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2024-07-23 11:35:59.248 CEST [12596] LOG:  duration: 9.301 ms  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2024-07-23 11:35:59.381 CEST [12596] LOG:  duration: 5.359 ms  statement: /*pga4dash*/
	SELECT
	    pid,
	    datname,
	    usename,
	    application_name,
	    client_addr,
	    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
	    state,
	    wait_event_type || ': ' || wait_event AS wait_event,
	    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
	    query,
	    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
	    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
	    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
	    backend_type,
	    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
	FROM
	    pg_catalog.pg_stat_activity
	WHERE
	    datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)ORDER BY pid
2024-07-23 11:35:59.540 CEST [15016] LOG:  duration: 1.091 ms  statement: SELECT CASE WHEN datlocprovider = 'i' THEN
		(SELECT daticulocale as cname FROM pg_database WHERE datname = current_database())
	ELSE
	    (SELECT datcollate as cname FROM pg_database WHERE datname = current_database()
	    UNION
	    SELECT datctype as cname FROM pg_database WHERE datname = current_database())
	END
	FROM pg_database WHERE datname = current_database();
2024-07-23 11:35:59.558 CEST [15016] LOG:  duration: 0.622 ms  statement: SELECT CASE WHEN datlocprovider = 'i' THEN
		(SELECT daticulocale as cname FROM pg_database WHERE datname = current_database())
	ELSE
	    (SELECT datcollate as cname FROM pg_database WHERE datname = current_database()
	    UNION
	    SELECT datctype as cname FROM pg_database WHERE datname = current_database())
	END
	FROM pg_database WHERE datname = current_database();
2024-07-23 11:35:59.585 CEST [15016] LOG:  duration: 7.607 ms  statement: SELECT colliculocale from pg_collation where collprovider = 'i'
2024-07-23 11:35:59.709 CEST [15016] LOG:  duration: 3.998 ms  statement: SELECT
	    ts.oid AS oid, spcname AS name, spcowner as owner,
	    pg_catalog.shobj_description(oid, 'pg_tablespace') AS description
	FROM
	    pg_catalog.pg_tablespace ts
	ORDER BY name;
2024-07-23 11:35:59.710 CEST [15016] LOG:  duration: 1.332 ms  statement: SELECT
		r.oid, r.rolname, r.rolcanlogin, r.rolsuper,
		pg_catalog.shobj_description(r.oid, 'pg_authid') AS description
	FROM
		pg_catalog.pg_roles r
	ORDER BY r.rolcanlogin, r.rolname
2024-07-23 11:35:59.711 CEST [15016] LOG:  duration: 0.408 ms  statement: SELECT * FROM
	(SELECT pg_catalog.pg_encoding_to_char(s.i) AS encoding
	FROM (SELECT pg_catalog.generate_series(0, 100, 1) as i) s) a
	WHERE encoding != '' ORDER BY encoding;
	
	
2024-07-23 11:35:59.802 CEST [12596] LOG:  duration: 2.108 ms  statement: /*pga4dash*/
	SELECT
	    pid,
	    datname,
	    usename,
	    application_name,
	    client_addr,
	    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
	    state,
	    wait_event_type || ': ' || wait_event AS wait_event,
	    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
	    query,
	    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
	    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
	    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
	    backend_type,
	    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
	FROM
	    pg_catalog.pg_stat_activity
	WHERE
	    datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)ORDER BY pid
2024-07-23 11:35:59.896 CEST [12596] LOG:  duration: 13.074 ms  statement: /*pga4dash*/
	SELECT 'session_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Total",
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE state = 'active' AND datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842))  AS "Active",
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE state = 'idle' AND datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842))  AS "Idle"
	) t
	UNION ALL
	SELECT 'tps_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(xact_commit) + sum(xact_rollback) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Transactions",
	   (SELECT sum(xact_commit) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Commits",
	   (SELECT sum(xact_rollback) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Rollbacks"
	) t
	UNION ALL
	SELECT 'ti_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_inserted) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Inserts",
	   (SELECT sum(tup_updated) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Updates",
	   (SELECT sum(tup_deleted) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Deletes"
	) t
	UNION ALL
	SELECT 'to_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_fetched) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Fetched",
	   (SELECT sum(tup_returned) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Returned"
	) t
	UNION ALL
	SELECT 'bio_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(blks_read) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Reads",
	   (SELECT sum(blks_hit) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Hits"
	) t
	
2024-07-23 11:36:00.226 CEST [12596] LOG:  duration: 9.981 ms  statement: SELECT
	    nsp.oid,
	    nsp.nspname as name,
	    pg_catalog.has_schema_privilege(nsp.oid, 'CREATE') as can_create,
	    pg_catalog.has_schema_privilege(nsp.oid, 'USAGE') as has_usage,
	    des.description
	FROM
	    pg_catalog.pg_namespace nsp
	    LEFT OUTER JOIN pg_catalog.pg_description des ON
	        (des.objoid=nsp.oid AND des.classoid='pg_namespace'::regclass)
	WHERE
	             nspname NOT LIKE E'pg\\_%' AND
	            NOT (
	(nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1))
	    )
	
	    
	ORDER BY nspname;
2024-07-23 11:36:00.315 CEST [12596] LOG:  duration: 0.711 ms  statement: SELECT
	    nsp.nspname as schema_name,
	    (nsp.nspname = 'pg_catalog' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pg_class' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'pgagent' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'pga_job' AND
	            relnamespace = nsp.oid LIMIT 1)) OR
	    (nsp.nspname = 'information_schema' AND EXISTS
	        (SELECT 1 FROM pg_catalog.pg_class WHERE relname = 'tables' AND
	            relnamespace = nsp.oid LIMIT 1)) AS is_catalog,
	    CASE
	    WHEN nsp.nspname = ANY('{information_schema}')
	        THEN false
	    ELSE true END AS db_support
	FROM
	    pg_catalog.pg_namespace nsp
	WHERE
	    nsp.oid = 2200::OID;
2024-07-23 11:36:00.585 CEST [12596] LOG:  duration: 2.077 ms  statement: /*pga4dash*/
	SELECT
	    pid,
	    datname,
	    usename,
	    application_name,
	    client_addr,
	    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
	    state,
	    wait_event_type || ': ' || wait_event AS wait_event,
	    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
	    query,
	    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
	    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
	    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
	    backend_type,
	    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
	FROM
	    pg_catalog.pg_stat_activity
	WHERE
	    datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)ORDER BY pid
2024-07-23 11:36:00.613 CEST [15016] LOG:  duration: 0.940 ms  statement: SELECT
		r.oid, r.rolname, r.rolcanlogin, r.rolsuper,
		pg_catalog.shobj_description(r.oid, 'pg_authid') AS description
	FROM
		pg_catalog.pg_roles r
	ORDER BY r.rolcanlogin, r.rolname
2024-07-23 11:36:00.623 CEST [12596] LOG:  duration: 7.610 ms  statement: SELECT rel.oid, rel.relname AS name,
	    (SELECT count(*) FROM pg_catalog.pg_trigger WHERE tgrelid=rel.oid AND tgisinternal = FALSE) AS triggercount,
	    (SELECT count(*) FROM pg_catalog.pg_trigger WHERE tgrelid=rel.oid AND tgisinternal = FALSE AND tgenabled = 'O') AS has_enable_triggers,
	    (CASE WHEN rel.relkind = 'p' THEN true ELSE false END) AS is_partitioned,
	    (SELECT count(1) FROM pg_catalog.pg_inherits WHERE inhrelid=rel.oid LIMIT 1) as is_inherits,
	    (SELECT count(1) FROM pg_catalog.pg_inherits WHERE inhparent=rel.oid LIMIT 1) as is_inherited,
	    des.description
	FROM pg_catalog.pg_class rel
	    LEFT OUTER JOIN pg_catalog.pg_description des ON (des.objoid=rel.oid AND des.objsubid=0 AND des.classoid='pg_class'::regclass)
	    WHERE rel.relkind IN ('r','s','t','p') AND rel.relnamespace = 2200::oid
	    AND NOT rel.relispartition
	        ORDER BY rel.relname;
2024-07-23 11:36:01.161 CEST [12596] LOG:  duration: 1.332 ms  statement: /*pga4dash*/
	SELECT
	    pid,
	    datname,
	    usename,
	    application_name,
	    client_addr,
	    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
	    state,
	    wait_event_type || ': ' || wait_event AS wait_event,
	    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
	    query,
	    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
	    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
	    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
	    backend_type,
	    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
	FROM
	    pg_catalog.pg_stat_activity
	WHERE
	    datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)ORDER BY pid
2024-07-23 11:36:04.458 CEST [12596] LOG:  duration: 14.867 ms  statement: /*pga4dash*/
	SELECT 'session_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Total",
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE state = 'active' AND datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842))  AS "Active",
	   (SELECT count(*) FROM pg_catalog.pg_stat_activity WHERE state = 'idle' AND datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842))  AS "Idle"
	) t
	UNION ALL
	SELECT 'tps_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(xact_commit) + sum(xact_rollback) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Transactions",
	   (SELECT sum(xact_commit) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Commits",
	   (SELECT sum(xact_rollback) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Rollbacks"
	) t
	UNION ALL
	SELECT 'ti_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_inserted) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Inserts",
	   (SELECT sum(tup_updated) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Updates",
	   (SELECT sum(tup_deleted) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Deletes"
	) t
	UNION ALL
	SELECT 'to_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(tup_fetched) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Fetched",
	   (SELECT sum(tup_returned) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Returned"
	) t
	UNION ALL
	SELECT 'bio_stats' AS chart_name, pg_catalog.row_to_json(t) AS chart_data
	FROM (SELECT
	   (SELECT sum(blks_read) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Reads",
	   (SELECT sum(blks_hit) FROM pg_catalog.pg_stat_database WHERE datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)) AS "Hits"
	) t
	
2024-07-23 11:36:05.270 CEST [12596] LOG:  duration: 2.092 ms  statement: /*pga4dash*/
	SELECT
	    pid,
	    datname,
	    usename,
	    application_name,
	    client_addr,
	    pg_catalog.to_char(backend_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS backend_start,
	    state,
	    wait_event_type || ': ' || wait_event AS wait_event,
	    array_to_string(pg_catalog.pg_blocking_pids(pid), ', ') AS blocking_pids,
	    query,
	    pg_catalog.to_char(state_change, 'YYYY-MM-DD HH24:MI:SS TZ') AS state_change,
	    pg_catalog.to_char(query_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS query_start,
	    pg_catalog.to_char(xact_start, 'YYYY-MM-DD HH24:MI:SS TZ') AS xact_start,
	    backend_type,
	    CASE WHEN state = 'active' THEN ROUND((extract(epoch from now() - query_start) / 60)::numeric, 2) ELSE 0 END AS active_since
	FROM
	    pg_catalog.pg_stat_activity
	WHERE
	    datname = (SELECT datname FROM pg_catalog.pg_database WHERE oid = 24842)ORDER BY pid
2024-07-23 11:36:07.261 CEST [8344] LOG:  duration: 7.814 ms  statement: SET DateStyle=ISO; SET client_min_messages=notice; SELECT set_config('bytea_output','hex',false) FROM pg_settings WHERE name = 'bytea_output'; SET client_encoding='utf-8';
2024-07-23 11:36:07.263 CEST [8344] LOG:  duration: 0.162 ms  statement: SELECT version()
2024-07-23 11:36:07.267 CEST [8344] LOG:  duration: 2.057 ms  statement: 
	SELECT
	    db.oid as did, db.datname, db.datallowconn,
	    pg_encoding_to_char(db.encoding) AS serverencoding,
	    has_database_privilege(db.oid, 'CREATE') as cancreate,
	    datistemplate
	FROM
	    pg_catalog.pg_database db
	WHERE db.datname = current_database()
2024-07-23 11:36:07.271 CEST [8344] LOG:  duration: 0.740 ms  statement: 
	        SELECT
	             gss_authenticated, encrypted
	        FROM
	            pg_catalog.pg_stat_gssapi
	        WHERE pid = pg_backend_pid()
2024-07-23 11:36:07.281 CEST [8344] LOG:  duration: 7.391 ms  statement: 
	        SELECT
	            roles.oid as id, roles.rolname as name,
	            roles.rolsuper as is_superuser,
	            CASE WHEN roles.rolsuper THEN true ELSE roles.rolcreaterole END as
	            can_create_role,
	            CASE WHEN roles.rolsuper THEN true
	            ELSE roles.rolcreatedb END as can_create_db,
	            CASE WHEN 'pg_signal_backend'=ANY(ARRAY(WITH RECURSIVE cte AS (
	            SELECT pg_roles.oid,pg_roles.rolname FROM pg_roles
	                WHERE pg_roles.oid = roles.oid
	            UNION ALL
	            SELECT m.roleid,pgr.rolname FROM cte cte_1
	                JOIN pg_auth_members m ON m.member = cte_1.oid
	                JOIN pg_roles pgr ON pgr.oid = m.roleid)
	            SELECT rolname  FROM cte)) THEN True
	            ELSE False END as can_signal_backend
	        FROM
	            pg_catalog.pg_roles as roles
	        WHERE
	            rolname = current_user
2024-07-23 11:36:30.185 CEST [8344] LOG:  duration: 713.537 ms  statement: select distinct (p_mfgr) from part
2024-07-23 11:36:30.299 CEST [8344] LOG:  duration: 8.568 ms  statement: SELECT at.attname, ty.typname, at.attnum
	    FROM pg_catalog.pg_attribute at
	    LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	    JOIN pg_catalog.pg_class as cl ON cl.oid=at.attrelid
	    JOIN pg_catalog.pg_namespace as nsp ON nsp.oid=cl.relnamespace
	WHERE
	    attrelid=24852::oid AND
	at.attnum > 0
	AND at.attisdropped = FALSE
2024-07-23 11:36:30.354 CEST [8344] LOG:  duration: 5.645 ms  statement: SELECT at.attname, at.attnum, ty.typname
	FROM pg_catalog.pg_attribute at LEFT JOIN pg_catalog.pg_type ty ON (ty.oid = at.atttypid)
	JOIN pg_catalog.pg_class as cl ON cl.oid=AT.attrelid
	JOIN pg_catalog.pg_namespace as nsp ON nsp.oid=cl.relnamespace
	WHERE
	    attrelid=24852::oid AND
	attnum = ANY (
	(SELECT con.conkey FROM pg_catalog.pg_class rel LEFT OUTER JOIN pg_catalog.pg_constraint con ON con.conrelid=rel.oid
	JOIN pg_catalog.pg_namespace as nsp ON nsp.oid=REL.relnamespace
	AND con.contype='p' WHERE rel.relkind IN ('r','s','t', 'p') AND
	    rel.oid = (24852)::oid
	)::oid[])
2024-07-23 11:36:30.418 CEST [8344] LOG:  duration: 9.746 ms  statement: SELECT DISTINCT att.attname as name, att.attnum as OID, pg_catalog.format_type(ty.oid,NULL) AS datatype,
	att.attnotnull as not_null, att.atthasdef as has_default_val, des.description, seq.seqtypid
	FROM pg_catalog.pg_attribute att
	    JOIN pg_catalog.pg_type ty ON ty.oid=atttypid
	    JOIN pg_catalog.pg_namespace tn ON tn.oid=ty.typnamespace
	    JOIN pg_catalog.pg_class cl ON cl.oid=att.attrelid
	    JOIN pg_catalog.pg_namespace na ON na.oid=cl.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_type et ON et.oid=ty.typelem
	    LEFT OUTER JOIN pg_catalog.pg_attrdef def ON adrelid=att.attrelid AND adnum=att.attnum
	    LEFT OUTER JOIN (pg_catalog.pg_depend JOIN pg_catalog.pg_class cs ON classid='pg_class'::regclass AND objid=cs.oid AND cs.relkind='S') ON refobjid=att.attrelid AND refobjsubid=att.attnum
	    LEFT OUTER JOIN pg_catalog.pg_namespace ns ON ns.oid=cs.relnamespace
	    LEFT OUTER JOIN pg_catalog.pg_index pi ON pi.indrelid=att.attrelid AND indisprimary
	    LEFT OUTER JOIN pg_catalog.pg_description des ON (des.objoid=att.attrelid AND des.objsubid=att.attnum AND des.classoid='pg_class'::regclass)
	    LEFT OUTER JOIN pg_catalog.pg_sequence seq ON cs.oid=seq.seqrelid
	WHERE
	
	    att.attrelid = 24852::oid
	    AND att.attnum > 0
	    AND att.attisdropped IS FALSE
	ORDER BY att.attnum
2024-07-23 11:38:59.838 CEST [6664] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:00.167 CEST [6664] LOG:  duration: 328.738 ms
2024-07-23 11:39:00.248 CEST [12316] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:00.561 CEST [12316] LOG:  duration: 313.971 ms
2024-07-23 11:39:00.645 CEST [14232] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:01.860 CEST [14232] LOG:  duration: 1214.652 ms
2024-07-23 11:39:01.940 CEST [14552] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:03.111 CEST [14552] LOG:  duration: 1170.968 ms
2024-07-23 11:39:03.208 CEST [14236] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:05.659 CEST [14236] LOG:  duration: 2450.864 ms
2024-07-23 11:39:05.738 CEST [5044] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:06.052 CEST [5044] LOG:  duration: 314.459 ms
2024-07-23 11:39:06.135 CEST [11232] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:06.449 CEST [11232] LOG:  duration: 313.513 ms
2024-07-23 11:39:06.665 CEST [14284] LOG:  statement: UPDATE lineorder

	SET lo_orderpriority = CASE lo_orderpriority

	    WHEN '1-URGENT' THEN '2-HIGH'

	    WHEN '2-HIGH' THEN '3-MEDIUM'

	    WHEN '3-MEDIUM' THEN '4-NOT SPECI'

	    WHEN '4-NOT SPECI'THEN '5-LOW'

	    WHEN '5-LOW'THEN '1-URGENT'

	    end

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:07.992 CEST [14284] LOG:  duration: 1327.930 ms
2024-07-23 11:39:08.075 CEST [4788] LOG:  statement: UPDATE part

	SET p_mfgr = CASE p_mfgr

	    WHEN 'MFGR#1' THEN 'MFGR#2'

	    WHEN 'MFGR#2' THEN 'MFGR#3'

	    WHEN 'MFGR#3' THEN 'MFGR#4'

	    WHEN 'MFGR#4'THEN 'MFGR#5'

	    WHEN 'MFGR#5'THEN 'MFGR#1'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:08.465 CEST [4788] LOG:  duration: 390.336 ms
2024-07-23 11:39:08.547 CEST [15200] LOG:  statement: UPDATE customer

	SET c_mktsegment = CASE c_mktsegment

	    WHEN 'AUTOMOBILE' THEN 'BUILDING'

	    WHEN 'BUILDING' THEN 'FURNITURE'

	    WHEN 'FURNITURE' THEN 'HOUSEHOLD'

	    WHEN 'HOUSEHOLD' THEN 'MACHINERY'

	    WHEN 'MACHINERY' THEN 'AUTOMOBILE'

	END

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:39:09.284 CEST [15200] LOG:  duration: 736.502 ms
2024-07-23 11:39:09.370 CEST [10452] LOG:  statement: UPDATE customer

	SET c_address = 'P.O Box N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:39:10.121 CEST [10452] LOG:  duration: 751.426 ms
2024-07-23 11:39:10.216 CEST [15520] LOG:  statement: UPDATE customer

	SET c_name = 'Customer' || c_custkey

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:39:11.087 CEST [15520] LOG:  duration: 871.080 ms
2024-07-23 11:39:12.212 CEST [15216] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:13.320 CEST [8344] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.

	
2024-07-23 11:39:13.320 CEST [12596] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.

	
2024-07-23 11:39:13.320 CEST [15016] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.

	
2024-07-23 11:39:15.304 CEST [15216] LOG:  duration: 3091.767 ms
2024-07-23 11:39:15.387 CEST [11900] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:15.738 CEST [11900] LOG:  duration: 351.438 ms
2024-07-23 11:39:15.918 CEST [12872] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:17.185 CEST [12872] LOG:  duration: 1266.574 ms
2024-07-23 11:39:17.267 CEST [7052] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:17.587 CEST [7052] LOG:  duration: 320.710 ms
2024-07-23 11:39:17.667 CEST [5612] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:20.253 CEST [5612] LOG:  duration: 2586.257 ms
2024-07-23 11:39:20.340 CEST [2924] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:39:21.045 CEST [2924] LOG:  duration: 705.937 ms
2024-07-23 11:39:21.128 CEST [7984] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:23.945 CEST [7984] LOG:  duration: 2817.475 ms
2024-07-23 11:39:25.213 CEST [14380] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:26.473 CEST [14380] LOG:  duration: 1260.447 ms
2024-07-23 11:39:26.560 CEST [14004] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:26.948 CEST [14004] LOG:  duration: 388.490 ms
2024-07-23 11:39:27.027 CEST [6404] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:28.236 CEST [6404] LOG:  duration: 1208.996 ms
2024-07-23 11:39:28.309 CEST [6924] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:29.521 CEST [6924] LOG:  duration: 1212.775 ms
2024-07-23 11:39:29.602 CEST [11388] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:39:29.648 CEST [11388] LOG:  duration: 45.809 ms
2024-07-23 11:39:29.725 CEST [10844] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:39:29.767 CEST [10844] LOG:  duration: 42.419 ms
2024-07-23 11:39:29.841 CEST [996] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:31.017 CEST [996] LOG:  duration: 1176.229 ms
2024-07-23 11:39:31.097 CEST [12068] LOG:  statement: UPDATE lineorder

	SET lo_orderpriority = CASE lo_orderpriority

	    WHEN '1-URGENT' THEN '2-HIGH'

	    WHEN '2-HIGH' THEN '3-MEDIUM'

	    WHEN '3-MEDIUM' THEN '4-NOT SPECI'

	    WHEN '4-NOT SPECI'THEN '5-LOW'

	    WHEN '5-LOW'THEN '1-URGENT'

	    end

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:32.268 CEST [12068] LOG:  duration: 1171.586 ms
2024-07-23 11:39:32.348 CEST [7008] LOG:  statement: UPDATE customer

	SET c_mktsegment = CASE c_mktsegment

	    WHEN 'AUTOMOBILE' THEN 'BUILDING'

	    WHEN 'BUILDING' THEN 'FURNITURE'

	    WHEN 'FURNITURE' THEN 'HOUSEHOLD'

	    WHEN 'HOUSEHOLD' THEN 'MACHINERY'

	    WHEN 'MACHINERY' THEN 'AUTOMOBILE'

	END

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:39:33.180 CEST [7008] LOG:  duration: 832.678 ms
2024-07-23 11:39:34.440 CEST [14420] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:35.715 CEST [14420] LOG:  duration: 1276.012 ms
2024-07-23 11:39:35.792 CEST [7588] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:38.613 CEST [7588] LOG:  duration: 2821.036 ms
2024-07-23 11:39:38.701 CEST [7748] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:39.134 CEST [7748] LOG:  duration: 433.934 ms
2024-07-23 11:39:39.240 CEST [7308] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:39.663 CEST [7308] LOG:  duration: 423.037 ms
2024-07-23 11:39:39.859 CEST [7592] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:41.277 CEST [7592] LOG:  duration: 1418.819 ms
2024-07-23 11:39:41.383 CEST [9736] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:44.032 CEST [9736] LOG:  duration: 2649.708 ms
2024-07-23 11:39:44.116 CEST [6780] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:39:44.171 CEST [6780] LOG:  duration: 55.746 ms
2024-07-23 11:39:45.284 CEST [7164] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:46.565 CEST [7164] LOG:  duration: 1281.003 ms
2024-07-23 11:39:46.645 CEST [11200] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:49.252 CEST [11200] LOG:  duration: 2607.527 ms
2024-07-23 11:39:49.336 CEST [4804] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:50.603 CEST [4804] LOG:  duration: 1267.583 ms
2024-07-23 11:39:50.683 CEST [5108] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:51.959 CEST [5108] LOG:  duration: 1275.911 ms
2024-07-23 11:39:52.047 CEST [3732] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:54.721 CEST [3732] LOG:  duration: 2674.401 ms
2024-07-23 11:39:54.813 CEST [16172] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:39:57.002 CEST [16172] LOG:  duration: 2188.886 ms
2024-07-23 11:39:57.105 CEST [13896] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:57.517 CEST [13896] LOG:  duration: 412.190 ms
2024-07-23 11:39:58.678 CEST [13840] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:39:59.076 CEST [13840] LOG:  duration: 398.359 ms
2024-07-23 11:39:59.165 CEST [5128] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:00.547 CEST [5128] LOG:  duration: 1382.773 ms
2024-07-23 11:40:00.638 CEST [5316] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:01.963 CEST [5316] LOG:  duration: 1325.027 ms
2024-07-23 11:40:02.179 CEST [4132] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:02.521 CEST [4132] LOG:  duration: 342.283 ms
2024-07-23 11:40:02.609 CEST [8976] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:03.930 CEST [8976] LOG:  duration: 1321.719 ms
2024-07-23 11:40:04.018 CEST [10984] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:05.272 CEST [10984] LOG:  duration: 1255.215 ms
2024-07-23 11:40:05.357 CEST [4740] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:06.585 CEST [4740] LOG:  duration: 1228.111 ms
2024-07-23 11:40:07.685 CEST [15860] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:08.005 CEST [15860] LOG:  duration: 320.246 ms
2024-07-23 11:40:08.230 CEST [6532] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:08.563 CEST [6532] LOG:  duration: 333.501 ms
2024-07-23 11:40:08.636 CEST [4744] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:09.845 CEST [4744] LOG:  duration: 1210.068 ms
2024-07-23 11:40:09.920 CEST [15664] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:11.102 CEST [15664] LOG:  duration: 1181.932 ms
2024-07-23 11:40:11.175 CEST [12352] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:11.846 CEST [12352] LOG:  duration: 671.294 ms
2024-07-23 11:40:11.919 CEST [16168] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:12.254 CEST [16168] LOG:  duration: 336.160 ms
2024-07-23 11:40:12.335 CEST [1304] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:12.652 CEST [1304] LOG:  duration: 317.658 ms
2024-07-23 11:40:13.778 CEST [10432] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:15.124 CEST [10432] LOG:  duration: 1346.483 ms
2024-07-23 11:40:15.206 CEST [14076] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:40:15.273 CEST [14076] LOG:  duration: 66.705 ms
2024-07-23 11:40:15.345 CEST [3392] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:18.089 CEST [3392] LOG:  duration: 2744.615 ms
2024-07-23 11:40:18.175 CEST [2604] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:21.336 CEST [2604] LOG:  duration: 3160.779 ms
2024-07-23 11:40:21.413 CEST [1660] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:22.098 CEST [1660] LOG:  duration: 685.963 ms
2024-07-23 11:40:22.175 CEST [4776] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:22.523 CEST [4776] LOG:  duration: 348.050 ms
2024-07-23 11:40:22.593 CEST [6536] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:23.296 CEST [6536] LOG:  duration: 704.055 ms
2024-07-23 11:40:24.409 CEST [12340] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:25.649 CEST [12340] LOG:  duration: 1240.216 ms
2024-07-23 11:40:25.726 CEST [15392] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:26.043 CEST [15392] LOG:  duration: 317.495 ms
2024-07-23 11:40:26.117 CEST [11700] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:40:26.166 CEST [11700] LOG:  duration: 49.360 ms
2024-07-23 11:40:26.245 CEST [6596] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:27.112 CEST [6596] LOG:  duration: 867.460 ms
2024-07-23 11:40:27.190 CEST [7968] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:27.514 CEST [7968] LOG:  duration: 324.480 ms
2024-07-23 11:40:27.630 CEST [11524] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:30.175 CEST [11524] LOG:  duration: 2546.307 ms
2024-07-23 11:40:30.249 CEST [6668] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:31.452 CEST [6668] LOG:  duration: 1203.775 ms
2024-07-23 11:40:32.564 CEST [12104] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:33.764 CEST [12104] LOG:  duration: 1199.522 ms
2024-07-23 11:40:33.842 CEST [13948] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:34.158 CEST [13948] LOG:  duration: 315.704 ms
2024-07-23 11:40:34.366 CEST [8744] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:34.684 CEST [8744] LOG:  duration: 318.652 ms
2024-07-23 11:40:34.758 CEST [10452] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:35.424 CEST [10452] LOG:  duration: 666.339 ms
2024-07-23 11:40:35.496 CEST [9692] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:36.694 CEST [9692] LOG:  duration: 1198.589 ms
2024-07-23 11:40:36.769 CEST [14472] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:37.460 CEST [14472] LOG:  duration: 691.530 ms
2024-07-23 11:40:37.531 CEST [16176] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:37.845 CEST [16176] LOG:  duration: 313.794 ms
2024-07-23 11:40:38.947 CEST [7796] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:40.134 CEST [7796] LOG:  duration: 1187.353 ms
2024-07-23 11:40:40.208 CEST [6976] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:41.496 CEST [6976] LOG:  duration: 1287.856 ms
2024-07-23 11:40:41.567 CEST [8272] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:42.751 CEST [8272] LOG:  duration: 1183.503 ms
2024-07-23 11:40:42.822 CEST [8324] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:43.510 CEST [8324] LOG:  duration: 688.268 ms
2024-07-23 11:40:43.586 CEST [15480] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:45.999 CEST [15480] LOG:  duration: 2414.384 ms
2024-07-23 11:40:46.076 CEST [5712] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:46.779 CEST [5712] LOG:  duration: 703.857 ms
2024-07-23 11:40:46.855 CEST [11184] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:40:47.615 CEST [11184] LOG:  duration: 760.758 ms
2024-07-23 11:40:48.832 CEST [2504] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:49.255 CEST [2504] LOG:  duration: 423.495 ms
2024-07-23 11:40:49.338 CEST [2888] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:50.593 CEST [2888] LOG:  duration: 1255.801 ms
2024-07-23 11:40:50.668 CEST [15084] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:51.947 CEST [15084] LOG:  duration: 1279.222 ms
2024-07-23 11:40:52.021 CEST [7040] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:53.270 CEST [7040] LOG:  duration: 1249.249 ms
2024-07-23 11:40:53.347 CEST [4920] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:54.592 CEST [4920] LOG:  duration: 1246.258 ms
2024-07-23 11:40:54.667 CEST [6312] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:40:54.991 CEST [6312] LOG:  duration: 324.064 ms
2024-07-23 11:40:55.071 CEST [14768] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:40:57.779 CEST [14768] LOG:  duration: 2709.043 ms
2024-07-23 11:40:59.005 CEST [11136] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:00.287 CEST [11136] LOG:  duration: 1282.635 ms
2024-07-23 11:41:00.376 CEST [14064] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:01.607 CEST [14064] LOG:  duration: 1232.006 ms
2024-07-23 11:41:01.683 CEST [13952] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:02.385 CEST [13952] LOG:  duration: 702.605 ms
2024-07-23 11:41:02.463 CEST [8524] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:03.660 CEST [8524] LOG:  duration: 1197.006 ms
2024-07-23 11:41:03.866 CEST [10712] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:06.642 CEST [10712] LOG:  duration: 2776.752 ms
2024-07-23 11:41:06.857 CEST [15376] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:41:07.172 CEST [15376] LOG:  duration: 316.021 ms
2024-07-23 11:41:07.247 CEST [13916] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:09.766 CEST [13916] LOG:  duration: 2518.761 ms
2024-07-23 11:41:10.893 CEST [7980] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:12.176 CEST [7980] LOG:  duration: 1283.330 ms
2024-07-23 11:41:12.270 CEST [13184] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:13.532 CEST [13184] LOG:  duration: 1262.738 ms
2024-07-23 11:41:13.609 CEST [11680] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:14.854 CEST [11680] LOG:  duration: 1245.361 ms
2024-07-23 11:41:14.934 CEST [14456] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:15.639 CEST [14456] LOG:  duration: 704.493 ms
2024-07-23 11:41:15.717 CEST [1608] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:16.984 CEST [1608] LOG:  duration: 1267.879 ms
2024-07-23 11:41:17.061 CEST [4144] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:17.792 CEST [4144] LOG:  duration: 731.800 ms
2024-07-23 11:41:17.865 CEST [14632] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:19.209 CEST [14632] LOG:  duration: 1343.910 ms
2024-07-23 11:41:20.335 CEST [15536] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:21.618 CEST [15536] LOG:  duration: 1283.086 ms
2024-07-23 11:41:21.698 CEST [14116] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:23.026 CEST [14116] LOG:  duration: 1328.856 ms
2024-07-23 11:41:23.104 CEST [8392] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:24.326 CEST [8392] LOG:  duration: 1222.697 ms
2024-07-23 11:41:24.548 CEST [7592] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:25.210 CEST [7592] LOG:  duration: 662.545 ms
2024-07-23 11:41:25.280 CEST [15304] LOG:  statement: UPDATE supplier

	SET s_address = 'P.O.B N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE s_suppkey = FLOOR(RANDOM() * 200000);
2024-07-23 11:41:25.446 CEST [15304] LOG:  duration: 166.520 ms
2024-07-23 11:41:25.520 CEST [3204] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:26.184 CEST [3204] LOG:  duration: 665.184 ms
2024-07-23 11:41:26.256 CEST [10444] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:28.708 CEST [10444] LOG:  duration: 2452.590 ms
2024-07-23 11:41:29.796 CEST [13588] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:31.374 CEST [13588] LOG:  duration: 1577.833 ms
2024-07-23 11:41:31.531 CEST [5820] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:32.987 CEST [5820] LOG:  duration: 1456.367 ms
2024-07-23 11:41:33.067 CEST [3332] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:41:33.431 CEST [3332] LOG:  duration: 365.307 ms
2024-07-23 11:41:33.511 CEST [11768] LOG:  statement: UPDATE lineorder

	SET lo_quantity = (lo_quantity + 1) % 51

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:34.850 CEST [11768] LOG:  duration: 1339.456 ms
2024-07-23 11:41:34.934 CEST [13900] LOG:  statement: UPDATE lineorder

	SET lo_discount = (lo_discount + 1) % 11

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:37.060 CEST [13900] LOG:  duration: 2125.636 ms
2024-07-23 11:41:37.149 CEST [12884] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:39.864 CEST [12884] LOG:  duration: 2715.455 ms
2024-07-23 11:41:39.963 CEST [1252] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:41:40.305 CEST [1252] LOG:  duration: 342.783 ms
2024-07-23 11:41:40.399 CEST [1460] LOG:  statement: UPDATE customer

	SET c_address = 'P.O Box N ' || FLOOR(RANDOM() * 25) || 'St N ' || FLOOR(RANDOM() * 1000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:41.106 CEST [1460] LOG:  duration: 707.537 ms
2024-07-23 11:41:41.339 CEST [504] LOG:  statement: UPDATE customer

	SET c_mktsegment = CASE c_mktsegment

	    WHEN 'AUTOMOBILE' THEN 'BUILDING'

	    WHEN 'BUILDING' THEN 'FURNITURE'

	    WHEN 'FURNITURE' THEN 'HOUSEHOLD'

	    WHEN 'HOUSEHOLD' THEN 'MACHINERY'

	    WHEN 'MACHINERY' THEN 'AUTOMOBILE'

	END

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:42.219 CEST [504] LOG:  duration: 880.843 ms
2024-07-23 11:41:43.356 CEST [13852] LOG:  statement: UPDATE lineorder

	SET lo_supplycost = CASE 

	    WHEN lo_supplycost > (SELECT MAX(lo_supplycost)  FROM lineorder) THEN lo_supplycost + 10

	    ELSE lo_supplycost - 10

	END

	WHERE lo_orderkey = FLOOR(RANDOM() * 6000000);
2024-07-23 11:41:45.802 CEST [13852] LOG:  duration: 2446.135 ms
2024-07-23 11:41:45.896 CEST [12468] LOG:  statement: UPDATE part

	SET supp = CASE p_partkey % 2

	    WHEN 0 THEN 'E'

	    WHEN 1 THEN 'O'

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:41:46.224 CEST [12468] LOG:  duration: 327.898 ms
2024-07-23 11:41:46.302 CEST [7068] LOG:  statement: UPDATE customer

	SET c_phone = FLOOR(RANDOM() * 100) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 1000) || '-' || FLOOR(RANDOM() * 10000)

	WHERE c_custkey = FLOOR(RANDOM() * 3000000);
2024-07-23 11:41:46.964 CEST [7068] LOG:  duration: 662.351 ms
2024-07-23 11:41:47.051 CEST [1728] LOG:  statement: UPDATE part

	SET p_color = CASE p_color

	    WHEN 'almond' THEN 'antique'

	    WHEN 'antique' THEN 'aquamarine'

	    WHEN 'aquamarine' THEN 'azure'

	    WHEN 'azure' THEN 'beige'

	    WHEN 'beige' THEN 'bisque'

	    WHEN 'bisque' THEN 'black'

	    WHEN 'black' THEN 'blanched'

	    WHEN 'blanched' THEN 'blue'

	    WHEN 'blue' THEN 'blush'

	    WHEN 'blush' THEN 'brown'

	    WHEN 'brown' THEN 'burlywood'

	    WHEN 'burlywood' THEN 'burnished'

	    WHEN 'burnished' THEN 'chartreuse'

	    WHEN 'chartreuse' THEN 'chiffon'

	    WHEN 'chiffon' THEN 'chocolate'

	    WHEN 'chocolate' THEN 'coral'

	    WHEN 'coral' THEN 'cornflower'

	    WHEN 'cornflower' THEN 'cornsilk'

	    WHEN 'cornsilk' THEN 'cream'

	    WHEN 'cream' THEN 'cyan'

	    WHEN 'cyan' THEN 'dark'

	    WHEN 'dark' THEN 'deep'

	    WHEN 'deep' THEN 'dim'

	    WHEN 'dim' THEN 'dodger'

	    WHEN 'dodger' THEN 'drab'

	    WHEN 'drab' THEN 'firebrick'

	    WHEN 'firebrick' THEN 'floral'

	    WHEN 'floral' THEN 'forest'

	    WHEN 'forest' THEN 'frosted'

	    WHEN 'frosted' THEN 'gainsboro'

	    WHEN 'gainsboro' THEN 'ghost'

	    WHEN 'ghost' THEN 'goldenrod'

	    WHEN 'goldenrod' THEN 'green'

	    WHEN 'green' THEN 'grey'

	    WHEN 'grey' THEN 'honeydew'

	    WHEN 'honeydew' THEN 'hot'

	    WHEN 'hot' THEN 'indian'

	    WHEN 'indian' THEN 'ivory'

	    WHEN 'ivory' THEN 'khaki'

	    WHEN 'khaki' THEN 'lace'

	    WHEN 'lace' THEN 'lavender'

	    WHEN 'lavender' THEN 'lawn'

	    WHEN 'lawn' THEN 'lemon'

	    WHEN 'lemon' THEN 'light'

	    WHEN 'light' THEN 'lime'

	    WHEN 'lime' THEN 'linen'

	    WHEN 'linen' THEN 'magenta'

	    WHEN 'magenta' THEN 'maroon'

	    WHEN 'maroon' THEN 'medium'

	    WHEN 'medium' THEN 'metallic'

	    WHEN 'metallic' THEN 'midnight'

	    WHEN 'midnight' THEN 'mint'

	    WHEN 'mint' THEN 'misty'

	    WHEN 'misty' THEN 'moccasin'

	    WHEN 'moccasin' THEN 'navajo'

	    WHEN 'navajo' THEN 'navy'

	    WHEN 'navy' THEN 'olive'

	    WHEN 'olive' THEN 'orange'

	    WHEN 'orange' THEN 'orchid'

	    WHEN 'orchid' THEN 'pale'

	    WHEN 'pale' THEN 'papaya'

	    WHEN 'papaya' THEN 'peach'

	    WHEN 'peach' THEN 'peru'

	    WHEN 'peru' THEN 'pink'

	    WHEN 'pink' THEN 'plum'

	    WHEN 'plum' THEN 'powder'

	    WHEN 'powder' THEN 'puff'

	    WHEN 'puff' THEN 'purple'

	    WHEN 'purple' THEN 'red'

	    WHEN 'red' THEN 'rose'

	    WHEN 'rose' THEN 'rosy'

	    WHEN 'rosy' THEN 'royal'

	    WHEN 'royal' THEN 'saddle'

	    WHEN 'saddle' THEN 'salmon'

	    WHEN 'salmon' THEN 'sandy'

	    WHEN 'sandy' THEN 'seashell'

	    WHEN 'seashell' THEN 'sienna'

	    WHEN 'sienna' THEN 'sky'

	    WHEN 'sky' THEN 'slate'

	    WHEN 'slate' THEN 'smoke'

	    WHEN 'smoke' THEN 'snow'

	    WHEN 'snow' THEN 'spring'

	    WHEN 'spring' THEN 'steel'

	    WHEN 'steel' THEN 'tan'

	    WHEN 'tan' THEN 'thistle'

	    WHEN 'thistle' THEN 'tomato'

	    WHEN 'tomato' THEN 'turquoise'

	    WHEN 'turquoise' THEN 'violet'

	    WHEN 'violet' THEN 'wheat'

	    WHEN 'wheat' THEN 'white'

	    WHEN 'white' THEN 'yellow'

	    ELSE 'almond' 

	END

	WHERE p_partkey = FLOOR(RANDOM() * 1400000);
2024-07-23 11:41:47.361 CEST [1728] LOG:  duration: 310.341 ms
2024-07-23 11:41:47.559 CEST [2932] LOG:  could not receive data from client: An existing connection was forcibly closed by the remote host.

	
